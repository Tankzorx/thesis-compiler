module FindLargest {
  datapath {
    dpIn: int in, dpOut: int out, largest: int reg, temp: int reg,
    newLargestFound: bool status;
    Init {
      largest := dpIn;
      temp := dpIn;
    },
    Idle {},
    ReadInput {
        newLargestFound := dpIn > largest;
        temp := dpIn;
    },
    ReadInputAndSetLargest {
      newLargestFound := dpIn > temp;
      largest := temp;
      temp := dpIn;
    },
    Return {
        dpOut := largest;
        cOut := true;
    },
    ReturnTemp {
        dpOut := temp;
        cOut := true;
    }
  }
  controller {
    cIn: bool in,
    cOut: bool out;
    Idle [cIn == true](Init)> ReadIn,
    Idle [cIn == false](Idle)> Idle,

    ReadIn [cIn && newLargestFound] (ReadInputAndSetLargest)> ReadIn,
    ReadIn [cIn && !newLargestFound] (ReadInput)> ReadIn,

    ReadIn [!cIn && newLargestFound] (ReturnTemp)> Idle,
    ReadIn [!cIn && !newLargestFound] (Return)> Idle
  }
}